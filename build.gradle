plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'de.kgrupp'
def isDebug = System.properties['inoks.java.monads.debug'] == "true"
def versionStr = System.properties['inoks.java.monads.version']
version = isDebug || !versionStr ? "LOCAL-VERSION" : versionStr

sourceCompatibility = 1.8

repositories {
    maven {
        url "http://localhost:8081/repository/maven-public/"
    }
    mavenCentral()
}

dependencies {
    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'inoks-java-monads'
        property 'sonar.projectName', 'inoks-java-monads'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

def nexusUrlRelease = project.hasProperty('nexusUrlRelease') ? nexusUrlRelease : 'http://localhost:8081/repository/maven-releases/'
def nexusUrlSnapshot = project.hasProperty('nexusUrlSnapshot') ? nexusUrlSnapshot : 'http://localhost:8081/repository/maven-snapshots'
def nexusUser = project.hasProperty('nexusUsername') ? nexusUsername : 'admin'
def nexusPw = project.hasProperty('nexusPassword') ? nexusPassword : 'admin123'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: nexusUrlRelease) {
                authentication(userName: nexusUser, password: nexusPw)
            }
            snapshotRepository(url: nexusUrlSnapshot) {
                authentication(userName: nexusUser, password: nexusPw)
            }
        }
    }
}
