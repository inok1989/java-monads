plugins {
    id "org.sonarqube" version "2.6.2"
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'de.kgrupp'
def isDebug = System.properties['inoks.java.monads.debug'] == "true"
def versionStr = System.properties['inoks.java.monads.version']
version = isDebug || !versionStr ? "LOCAL-VERSION" : versionStr

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
}

test {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'inoks-java-monads'
        property 'sonar.projectName', 'inoks-java-monads'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    classifier "sources"
}

publishing {
    publications {
        myPublication(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact ('README.md') {
                classifier = 'README'
                extension  = 'md'
            }
            pom {
                name = "Inoks Java Monads"
                description = "A set of java classes to enable monadic programming."
                url = "https://github.com/inok1989/java-monads"
                licenses {
                    license {
                        name = "MIT License"
                        url = "https://opensource.org/licenses/mit-license"
                    }
                }
                developers {
                    developer {
                        id = "inok1989"
                        name = "Konstantin Grupp"
                        email = "coding@konstantin-grupp.de"
                    }
                }
                scm {
                    connection = "scm:git:git:https://github.com/inok1989/java-monads.git"
                    developerConnection = "scm:git:ssh://git@github.com/jenkinsci/jenkins.git"
                    url = "https://github.com/inok1989/java-monads"
                }
            }
        }
    }
    repositories {
        mavenLocal()
    }
}
